{"version":3,"sources":["webpack:///./src/pages/convolution.jsx"],"names":["test","props","Sketch","p","img","setup","createCanvas","loadImage","asset","draw","background","image","ellipse","myRef","React","createRef","componentDidMount","this","myP5","p5","current","render","ref","Component"],"mappings":"4MAsBMA,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAIFC,OAAS,SAACC,GACR,IAAIC,EACJD,EAAEE,MAAQ,WACRF,EAAEG,aAAa,IAAK,KACpBF,EAAMD,EAAEI,UAAUC,MAGpBL,EAAEM,KAAO,WACPN,EAAEO,WAAW,KAEbP,EAAEQ,MAAMP,EAAK,EAAG,GAEhBD,EAAEQ,MAAMP,EAAK,EAAG,IAAK,IAAK,KAC1BD,EAAES,QAAQ,GAAI,GAAI,GAAI,MAhBxB,EAAKC,MAAQC,IAAMC,YAFF,E,4CAsBnBC,kBAAA,WACEC,KAAKC,KAAO,IAAIC,EAAGF,KAAKf,OAAQe,KAAKJ,MAAMO,U,EAG7CC,OAAA,WACE,OACE,uBACE,mBAAKC,IAAKL,KAAKJ,OACb,4C,GA/BSU,aAoDJvB,a","file":"component---src-pages-convolution-jsx-0d0385239d67b387e4fa.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"../styles/app.css\"\nimport * as p5 from \"p5\"\nimport React, { Component } from \"react\"\n// import { ProjectCard } from \"@lekoarts/gatsby-theme-cara\"\n// import { Cover } from \"./../components/Cover\"\n\n// import React from \"react\"\n// export default () => {\n//     return (\n//         <div className=\"jumbotron m-4 bg-gradient-orange\">\n//             <h1 className=\"display-4\">Convoluciones con P5</h1>\n//             <p className=\"lead\">lorem ipsum</p>\n//             <hr className=\"my-4\"></hr>\n//             <p>lorem ipsum</p>\n//             <a className=\"btn btn-lg btn-dark\" href=\"#\" role=\"button\">Convolución</a>\n//         </div>\n//     )\n// }\n\nimport asset from \"../../static/android-chrome-512x512.png\"\n\nclass test extends Component {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n  }\n\n  Sketch = (p) => {\n    let img\n    p.setup = () => {\n      p.createCanvas(720, 400)\n      img = p.loadImage(asset) // Cargar la imagen\n    }\n\n    p.draw = () => {\n      p.background(220)\n      // Muestra la imagen en su tamaño original en la posición (0,0)\n      p.image(img, 0, 0)\n      // Muestra la imagen en la posición (0, height/2) a la mitad del tamaño\n      p.image(img, 0, 350, 350, 300)\n      p.ellipse(50, 50, 80, 80)\n    }\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current)\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.myRef}>\n          <h1>Hello World p5 </h1>\n        </div>\n        {/* <ProjectCard\n            title=\"Repositorio\"\n            target=\"\"\n            link=\"https://cv-2020-1.github.io/welcome\"\n            bg=\"linear-gradient(to right, #D4145A 0%, #FBB03B 100%)\"\n          >\n            Convoluciones en P5 con distintos kernels para tratamiento de\n            imágenes.\n          </ProjectCard> */}\n        {/* <Cover\n            title=\"Repositorio\"\n            target=\"\"\n            link=\"https://cv-2020-1.github.io/welcome\"\n          ></Cover> */}\n      </div>\n    )\n  }\n}\n\nexport default test\n"],"sourceRoot":""}